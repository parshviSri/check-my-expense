{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/AddExpense.js","components/NewExpense/NewExpense.js","components/UI/Card/card.js","components/ExpenseFilter/ExpensesFilter.js","components/Expense/ExpenseDate.js","components/Expense/ExpenseItem.js","components/Expense/ExpenseList/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expense/ExpenseChart.js","components/Expense/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","title","amount","date","userInput","setUserInput","onSubmit","event","preventDefault","console","log","onSaveData","className","type","value","onChange","prevState","target","min","max","Date","onClick","onCancelClick","AddExpense","clickedFlag","clickeFlag","setClickedFlag","cancelClickFlag","setCancelClickFlag","expenseData","data","NewExpense","newexpenseData","id","Math","random","toString","onUpdateExpense","Card","classes","children","ExpensesFilter","onUpdateYear","ExpenseDate","month","toLocaleString","year","getFullYear","day","ExpenseItems","ExpenseList","filteredContent","filteredExpense","length","map","expense","ExpenseItem","ChartBar","barFillHeight","maxValue","round","dataValue","style","height","dataLabel","Chart","dataPointValues","dataExpense","totalMaximum","ExpenseChart","barValue","getMonth","Expenses","selectedYear","setSelectedYear","expenses","newExpense","setNewExpense","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sZA+FeA,EA7FG,SAACC,GAIf,MAA8BC,mBAAS,CACnCC,MAAM,GACNC,OAAO,GACPC,KAAK,KAHT,mBAAMC,EAAN,KAAgBC,EAAhB,KAuDA,OACI,8BACI,uBAAMC,SAjBG,SAACC,GACdA,EAAMC,iBACNC,QAAQC,IAAIN,GACZL,EAAMY,WAAWP,GACjBC,EAAa,CACTH,OAAO,GACPC,KAAK,GACLF,MAAM,MAUN,UACI,qBAAKW,UAAW,wBAAhB,SACI,sBAAKA,UAAW,6BAAhB,UACI,uBAAOA,UAAU,6BAAjB,mBACI,uBAAOC,KAAK,OAAOD,UAAU,6BAA6BE,MAAQV,EAAUH,MAAOc,SAvDxF,SAACR,GAIhBF,GAAa,SAACW,GACV,kCACOA,GADP,IAEIf,MAAOM,EAAMU,OAAOH,mBAmDhB,qBAAKF,UAAW,wBAAhB,SACA,sBAAKA,UAAW,6BAAhB,UAEA,uBAAOA,UAAU,6BAAjB,oBACA,uBAAOC,KAAK,SAASD,UAAU,6BAA8BE,MAASV,EAAUF,OAAOa,SAlDnF,SAACR,GAGjBF,GAAa,SAACW,GACV,kCACOA,GADP,IAEId,OAAQK,EAAMU,OAAOH,mBA+CrB,qBAAKF,UAAU,wBAAf,SACA,sBAAKA,UAAW,6BAAhB,UAEA,uBAAOA,UAAU,6BAAjB,kBACD,uBAAOC,KAAK,OAAOK,IAAI,aAAaC,IAAI,aAAaL,MAAQV,EAAUD,KAAMY,SA9CtE,SAACR,GAGfF,GAAa,SAACW,GACV,kCACOA,GADP,IAEIb,KAAM,IAAIiB,KAAKb,EAAMU,OAAOH,oBA2C5B,sBAAKF,UAAU,sBAAf,UACA,wBAAQC,KAAK,SAAb,yBACA,wBAAQA,KAAK,SAASC,OAAO,EAAOO,QA9BjC,SAACd,GACZR,EAAMuB,cAAcf,EAAMU,OAAOH,QA6BzB,6BC1DDS,EAzBE,SAACxB,GACd,MAAiCC,mBAASD,EAAMyB,aAAhD,mBAAMC,EAAN,KAAiBC,EAAjB,KACA,EAA0C1B,oBAAS,GAAnD,mBAAM2B,EAAN,KAAsBC,EAAtB,KAgBE,OAAGH,IAAeE,EACT,cAAC,EAAD,CAAahB,WAhBR,SAACkB,GACb9B,EAAMY,WAAWkB,IAeyBP,cAPnB,SAACQ,GACtBrB,QAAQC,IAAIoB,GACZF,EAAmBE,MASlB,wBAAQhB,OAAO,EAAMO,QAhBX,SAACd,GACdE,QAAQC,IAAIH,EAAMU,OAAOH,OACzBY,EAAenB,EAAMU,OAAOH,OAC5Bc,GAAmB,IAahB,+BCNIG,EAjBE,SAAChC,GAWd,OACI,qBAAKa,UAAU,cAAf,SACI,cAAC,EAAD,CAAYY,aAHH,EAG2Bb,WAZ5B,SAACkB,GACb,IAAMG,EAAe,2BACdH,GADa,IAEhBI,GAAIC,KAAKC,SAASC,aAEtBrC,EAAMsC,gBAAgBL,S,MCDfM,MANf,SAAcvC,GACZ,IAAMwC,EAAU,QAAUxC,EAAMa,UAEhC,OAAO,qBAAKA,UAAW2B,EAAhB,SAA0BxC,EAAMyC,YCoB1BC,G,YArBQ,SAAC1C,GAMtB,OACE,qBAAKa,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,SARI,SAACR,GACjBR,EAAM2C,aAAanC,EAAMU,OAAOH,QAO5B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,kBCDK6B,MAdf,SAAqB5C,GACjB,IAAM6C,EAAQ7C,EAAMI,KAAK0C,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAM/C,EAAMI,KAAK4C,cACjBC,EAAKjD,EAAMI,KAAK0C,eAAe,QAAQ,CAACG,IAAI,YAElD,OACI,eAAC,EAAD,CAAMpC,UAAU,eAAhB,UACI,qBAAKA,UAAU,qBAAf,SAAqCgC,IACrC,qBAAKhC,UAAU,oBAAf,SAAoCkC,IACpC,qBAAK,eAAa,mBAAlB,SAAsCE,QCInCC,MAdf,SAAsBlD,GAClB,OACI,sBAAKa,UAAW,eAAhB,UACI,cAAC,EAAD,CAAaT,KAAMJ,EAAMI,OAEzB,sBAAKS,UAAU,4BAAf,UACI,6BAAKb,EAAME,QACX,sBAAKW,UAAU,sBAAf,cAAuCb,EAAMG,iBCY9CgD,EAjBK,SAAAnD,GAChB,IAAMoD,EAAgB,oBAAIvC,UAAU,0BAAd,iCACtB,OAAiC,GAA9Bb,EAAMqD,gBAAgBC,OACdF,EAGP,oBAAIvC,UAAU,eAAd,SAEQb,EAAMqD,gBAAgBE,KAAI,SAACC,GACvB,OAAQ,cAACC,EAAD,CAA+BvD,MAAOsD,EAAQtD,MAAOC,OAAQqD,EAAQrD,OAAQC,KAAMoD,EAAQpD,MAAxEoD,EAAQtB,U,OCWxCwB,G,MApBE,SAAC1D,GAChB,IAAI2D,EAAgB,KAMpB,OAJI3D,EAAM4D,SAAW,IACnBD,EAAgBxB,KAAK0B,MAAO7D,EAAM8D,UAAY9D,EAAM4D,SAAY,KAAO,KAIvE,sBAAK/C,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVkD,MAAO,CAAEC,OAAQL,OAGrB,qBAAK9C,UAAU,mBAAf,SAAmCb,EAAMiE,iBCLhCC,G,MAVH,SAAClE,GACT,IAAMmE,EAAiBnE,EAAMoE,YAAYb,KAAI,SAACxB,GAAD,OAAQA,EAAKhB,SACpDsD,EAAclC,KAAKf,IAAL,MAAAe,KAAI,YAAQgC,IAChC,OACI,qBAAKtD,UAAU,QAAf,SACKb,EAAMoE,YAAYb,KAAI,SAACxB,GAAD,OAAS,cAAC,EAAD,CAA2B6B,SAAUS,EAAcP,UAAW/B,EAAKhB,MAAOkD,UAAWlC,EAAKc,OAA3Ed,EAAKc,cCgBjDyB,EAvBI,SAACtE,GAChB,IADwB,EAClBuE,EAAS,CACX,CAAC,MAAQ,MAAOxD,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,OAAQA,MAAM,GACvB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,GACtB,CAAC,MAAQ,MAAOA,MAAM,IAbF,cAgBHf,EAAMqD,iBAhBH,IAgBxB,IAAI,EAAJ,qBAA2C,CAAC,IAAlCG,EAAiC,QAEvCe,EADqBf,EAAQpD,KAAKoE,YACXzD,OAAOyC,EAAQrD,QAlBlB,8BAoBxB,OAAO,cAAC,EAAD,CAAOiE,YAAaG,KCmBhBE,MAhCf,SAAkBzE,GAChB,MAAsCC,mBAAS,IAA/C,mBAAMyE,EAAN,KAAoBC,EAApB,KACA,EAAmC1E,mBAASD,EAAM4E,UAAlD,mBAAOC,EAAP,KAAkBC,EAAlB,KAeQzB,EAAgBwB,EAAWE,QAAO,SAACvB,GAAW,OAAOA,EAAQpD,KAAK4C,eAAe0B,KAEvF,OACE,6BACF,eAAC,EAAD,CAAM7D,UAAU,WAAhB,UACI,cAAC,EAAD,CAAYyB,gBAZK,SAACkB,GACpB9C,QAAQC,IAAI6C,GACZsB,GAAc,SAAC7D,GACb,MAAM,GAAN,mBAAUA,GAAV,CAAoBuC,UAUpB,cAAC,EAAD,CAAgBb,aAnBF,SAACI,GACjBrC,QAAQC,IAAIkE,GACZF,EAAgB5B,MAkBd,cAAC,EAAD,CAAcM,gBAAiBA,IAC/B,cAAC,EAAD,CAAaA,gBAAiBA,UCJvB2B,MA5Bf,WACE,IAAMJ,EAAW,CACf,CACE1C,GAAI,KACJhC,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIiB,KAAK,KAAM,EAAG,KAE1B,CAAEa,GAAI,KAAMhC,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIiB,KAAK,KAAM,EAAG,KACrE,CACEa,GAAI,KACJhC,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIiB,KAAK,KAAM,EAAG,KAE1B,CACEa,GAAI,KACJhC,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIiB,KAAK,KAAM,EAAG,MAI5B,OACE,cAAC,EAAD,CAAUuD,SAAUA,KCrBxBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a83d1fb8.chunk.js","sourcesContent":["import React, {useState}from \"react\";\nimport './ExpenseForm.css';\nconst ExpenseForm=(props)=>{\n    // const[typeTitled,setTypeTitle]=useState('');\n    // const[typeAmount,setTypeAmount]=useState('')\n    // const[typeDate,setTypeDate]=useState('')\n    const[userInput,setUserInput]=useState({\n        title:'',\n        amount:'',\n        date:''\n    })\n\n    const titleChange= (event)=>{\n        // setTypeTitle(event.target.value);\n        // console.log(event.target.value);\n        // console.log(typeTitled);\n        setUserInput((prevState)=>{\n            return{\n                ...prevState,\n                title: event.target.value\n            }\n        })\n\n    }\n    const AmountChange= (event)=>{\n        // setTypeAmount(event.target.value);\n        // console.log(event.target.value);\n        setUserInput((prevState)=>{\n            return{\n                ...prevState,\n                amount: event.target.value\n            }\n        })\n\n    }\n    const DateChange= (event)=>{\n        // setTypeDate(event.target.value);\n        // console.log(event.target.value);\n        setUserInput((prevState)=>{\n            return{\n                ...prevState,\n                date: new Date(event.target.value)\n            }\n        })\n\n    }\n    const submitForm=(event)=>{\n        event.preventDefault()\n        console.log(userInput);\n        props.onSaveData(userInput)\n        setUserInput({\n            amount:'',\n            date:'',\n            title:''\n        })\n    }\n    const sendFlag=(event)=>{\n        props.onCancelClick(event.target.value);\n\n    }\n    \n    return(\n        <div>\n            <form onSubmit={submitForm}>\n                <div className= \"new-expense__controls\">\n                    <div className =\"new-expense__control label\"> \n                        <label className=\"new-expense__control label\">Title</label>\n                            <input type=\"text\" className=\"new-expense__control input\" value ={userInput.title} onChange={titleChange}/>\n                    </div>\n                    </div>\n                    <div className =\"new-expense__controls\"> \n                    <div className =\"new-expense__control label\"> \n\n                    <label className=\"new-expense__control label\">Amount</label>\n                    <input type=\"number\" className=\"new-expense__control input\"  value = {userInput.amount}onChange={AmountChange}/>\n                </div>\n                </div>\n                <div className=\"new-expense__controls\">\n                <div className =\"new-expense__control label\"> \n \n                <label className=\"new-expense__control label\">Date</label>\n               <input type='date' min='2019-01-01' max='2022-12-31' value= {userInput.date} onChange={DateChange}/>\n                </div>\n                </div>\n                <div className=\"new-expense_actions\">\n                <button type='submit'>Add Expense</button>\n                <button type=\"button\" value={false} onClick={sendFlag}>Cancel</button>\n            </div>\n        </form>\n\n        </div>\n\n        \n    )\n}\nexport default ExpenseForm;","import ExpenseForm from \"./ExpenseForm\";\nimport React, {useState} from 'react';\n\nconst AddExpense=(props)=>{\n    const[clickeFlag,setClickedFlag]=useState(props.clickedFlag);\n    const[cancelClickFlag,setCancelClickFlag]=useState(false)\n    const saveData= (expenseData)=>{\n        props.onSaveData(expenseData)\n\n    } \n    const updateFlag=(event)=>{\n        console.log(event.target.value);\n        setClickedFlag(event.target.value);\n        setCancelClickFlag(false)\n      }\n      const updateFlagonCancel=(data)=>{\n          console.log(data);\n          setCancelClickFlag(data)\n\n      }\n     \n      if(clickeFlag && !cancelClickFlag){\n        return(<ExpenseForm onSaveData={saveData} onCancelClick={updateFlagonCancel}/>) \n    }\n\n   \n    return(<button value={true} onClick={updateFlag}> Add new Expense</button>)\n}\nexport default AddExpense","import React from \"react\";\nimport './NewExpense.css';\nimport AddExpense from './AddExpense';\nconst NewExpense=(props)=>{\n    const saveData= (expenseData)=>{\n        const newexpenseData={\n            ...expenseData,\n            id: Math.random().toString()\n        }\n        props.onUpdateExpense(newexpenseData)\n\n    } \n    \n    const clickFlag= false;\n    return(\n        <div className=\"new-expense\">\n            <AddExpense clickedFlag={clickFlag} onSaveData={saveData}/>            \n        </div>\n    )\n}\nexport default NewExpense;","import './card.css';\n\nfunction Card(props) {\n  const classes = 'card ' + props.className;\n  \n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;","import React, {useState} from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n  const onSetFilter=(event)=>{\n    props.onUpdateYear(event.target.value);\n\n  }\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select onChange= {onSetFilter}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\nimport React,{useState} from 'react';\nimport Card from '../UI/Card/card';\nfunction ExpenseDate(props){\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\n    const year= props.date.getFullYear();\n    const day= props.date.toLocaleString('en-US',{day:'2-digit'});\n\n    return(\n        <Card className='expense-date'>\n            <div className='expense-date_month'>{month}</div>\n            <div className='expense-date_year'>{year}</div>\n            <div expense-date='expense-date_day'>{day}</div>\n        </Card>\n    )\n\n}\nexport default ExpenseDate","import './ExpenseItems.css';\nimport ExpenseDate from './ExpenseDate';\nfunction ExpenseItems(props){\n    return(\n        <div className= \"expense-item\">\n            <ExpenseDate date={props.date}/>\n            \n            <div className=\"expense-item__description\">\n                <h2>{props.title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n            \n        </div>\n            )\n}\n\nexport default ExpenseItems;","import './ExpenseList.css';\nimport ExpenseItems from \"../ExpenseItem\";\n\n\nconst ExpenseList = props =>{\n    const filteredContent=<h2 className=\"expenses-list__fallback\">Found No Content !!</h2>\n    if(props.filteredExpense.length==0){\n        return filteredContent\n    }\n    return (\n        <ul className=\"expense-list\">\n            {\n                props.filteredExpense.map((expense)=>{\n                    return (<ExpenseItems key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}></ExpenseItems>)}\n        \n          )\n            }\n        </ul>\n    )\n}\n\nexport default ExpenseList","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.dataValue / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.dataLabel}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;","import ChartBar from './ChartBar';\nimport './Chart.css';\n\n\nconst Chart=(props)=>{\n    const dataPointValues= props.dataExpense.map((data)=>data.value);\n    const totalMaximum= Math.max(...dataPointValues)\n    return(\n        <div className=\"chart\">\n            {props.dataExpense.map((data)=> <ChartBar key={data.month} maxValue={totalMaximum} dataValue={data.value} dataLabel={data.month}></ChartBar>)}\n        </div>\n    )\n}\n\nexport default Chart","import Chart from '../Chart/Chart';\n\nconst ExpenseChart=(props)=>{\n    const barValue=[\n        {\"month\":'Jan', value:0},\n        {\"month\":'Feb', value:0},\n        {\"month\":'Mar', value:0},\n        {\"month\":'Apr', value:0},\n        {\"month\":'May', value:0},\n        {\"month\":'Jun', value:0},\n        {\"month\":'Jul', value:0},\n        {\"month\":'Aug', value:0},\n        {\"month\":'Sept', value:0},\n        {\"month\":'Oct', value:0},\n        {\"month\":'Nov', value:0},\n        {\"month\":'Dec', value:0},\n\n    ]\n    for(const expense of props.filteredExpense){\n        const expenseMonth = expense.date.getMonth();\n        barValue[expenseMonth].value+=expense.amount;\n    }\n    return(<Chart dataExpense={barValue}></Chart>)\n}\n\nexport default ExpenseChart","import React, {useState} from 'react';\nimport NewExpense from \"../NewExpense/NewExpense\";\nimport Card from '../UI/Card/card';\nimport './Expenses.css';\nimport ExpensesFilter from '../ExpenseFilter/ExpensesFilter';\nimport ExpenseList from './ExpenseList/ExpenseList';\nimport ExpenseDate from './ExpenseDate';\nimport ExpenseChart from './ExpenseChart';\n\nfunction Expenses(props){\n  const[selectedYear, setSelectedYear]= useState('');\n  const [newExpense,setNewExpense] = useState(props.expenses);\n\n    const updateYear =(year)=>{\n      console.log(newExpense);\n      setSelectedYear(year);\n     \n      \n    }\n    const updateExpense= (expense)=>{\n      console.log(expense);\n      setNewExpense((prevState)=>{\n        return[...prevState,expense]\n      })\n\n    }\n    const filteredExpense=newExpense.filter((expense)=>{return expense.date.getFullYear()==selectedYear})\n\n    return(\n      <li>\n    <Card className=\"expenses\">\n        <NewExpense onUpdateExpense={updateExpense}/>\n        <ExpensesFilter onUpdateYear = {updateYear}/>\n        <ExpenseChart filteredExpense={filteredExpense}/>\n        <ExpenseList filteredExpense={filteredExpense}></ExpenseList>\n        \n      </Card>\n      </li>\n      )\n}\n\nexport default Expenses","import Expenses from './components/Expense/Expenses';\n\nfunction App() {\n  const expenses = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  return (\n    <Expenses expenses={expenses}/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}